{{- if .Values.deployment.enabled }}
{{- if .Values.argoWorkflow.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else}}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ include "helm-django.fullname" . }}
  labels:
    {{- include "helm-django.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.deployment.annotations }}
    {{- toYaml .Values.deployment.annotations  | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "helm-django.selectorLabels" . | nindent 6 }}
{{- if .Values.argoWorkflow.enabled }}
  strategy:
    {{- toYaml .Values.argoWorkflow.strategy | nindent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        {{- include "helm-django.selectorLabels" . | nindent 8 }}
        {{- if .Values.deployment.podLabels }}
        {{- toYaml .Values.deployment.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.deployment.annotations }}
        {{- toYaml .Values.deployment.annotations  | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "helm-django.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.deploymentApp.command }}
          args: {{ .Values.deploymentApp.args }}
          env:
            {{- if gt (len .Values.env) 0 }}
            {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
            - name: NO_MIGRATIONS
              value: "true {{ (len .Values.env) }}"

          ports:
            - name: {{ .Values.httpPortName }}
              containerPort: {{ .Values.httpPort }}
              protocol: TCP

          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
