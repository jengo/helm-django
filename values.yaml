# Default values for helm-django.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

httpPort: 80

service:
  enabled: true
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http

# TODO: Not happy with this layout, it's a pain in the ass to use
traefik:
  enabled: false
  ingressRoute:
    entryPoints:
      - web
      - websecure
    routes:
      - match: Host(`test.example.com`)
        kind: Rule
        services:
        # NOTE: You must update this to match {{ include "helm-django.fullname" . }}
        # This will be improved in the future
        - name: test-chart-helm-django
          port: 80
  ingress:
    rules:
      - host: test.example.com
        http:
          paths:
          - backend:
              # NOTE: You must update this to match {{ include "helm-django.fullname" . }}
              # This will be improved in the future
              serviceName: test-chart-helm-django
              servicePort: 80
            path: /
    tls:
    - hosts:
      - test.example.com
  annotations: {}

migrationsJob:
  command:
    - /app/scripts/entrypoint.sh
  args:
    - /app/scripts/run-migrations.sh

deploymentApp:
  command:
    - /app/scripts/entrypoint.sh
  args:
    - /app/scripts/run-copy-assets.sh

revisionHistoryLimit: 2

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Environment variables
env: []
  # Example:
  # - name: SECRET_USERNAME
  #   valueFrom:
  #     secretKeyRef:
  #       name: mysecret
  #       key: username
  # - name: SECRET_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: mysecret
  #       key: password

# Attach extra volumes, uses standard Kubernetes deployment format
volumeMounts: []
  # Example:
  # - name: secret-volume
  #   readOnly: true
  #   mountPath: "/etc/secret-volume"

volumes: []
  # Example:
  # volumes:
  # - name: secret-volume
  #   secret:
  #     secretName: mysecret

nodeSelector: {}

tolerations: []

affinity: {}
